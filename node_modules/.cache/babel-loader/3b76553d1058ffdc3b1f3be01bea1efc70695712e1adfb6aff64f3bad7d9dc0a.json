{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merye\\\\Desktop\\\\react-workshop1-main\\\\src\\\\FormItems\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const calculateHandler = (event, userInput) => {\n    // Prevent the default form submission behavior\n    event.preventDefault();\n\n    // Should be triggered when form is submitted\n\n    const yearlyData = []; // per-year results\n    let currentSavings = +userInput[\"enteredCurrentSavings\"];\n    const yearlyContribution = +userInput[\"enteredYearlySavings\"];\n    const expectedReturn = +userInput[\"enteredExpectedInterest\"] / 100;\n    const duration = +userInput[\"enteredInvestmentDuration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        investedCapital: currentSavings - yearlyInterest\n      });\n      console.log(yearlyData);\n    }\n\n    // do something with yearlyData ...\n  };\n\n  const resetForm = () => {\n    setUserInput({\n      enteredCurrentSavings: \"\",\n      enteredYearlySavings: \"\",\n      enteredExpectedInterest: \"\",\n      enteredInvestmentDuration: \"\"\n    });\n  };\n  const [userInput, setUserInput] = useState({\n    enteredCurrentSavings: \"\",\n    enteredYearlySavings: \"\",\n    enteredExpectedInterest: \"\",\n    enteredInvestmentDuration: \"\"\n  });\n  const CurrentSavingsChangeHandler = event => {\n    const newValue = event.target.value;\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        enteredCurrentSavings: newValue !== \"\" ? parseInt(newValue, 10) : \"\"\n      };\n    });\n  };\n  const YearlySavingsChangeHandler = event => {\n    const newValue = event.target.value;\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        enteredYearlySavings: newValue !== \"\" ? parseInt(newValue, 10) : \"\"\n      };\n    });\n  };\n  const ExpectedInterestChangeHandler = event => {\n    const newValue = event.target.value;\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        enteredExpectedInterest: newValue !== \"\" ? parseInt(newValue, 10) : \"\"\n      };\n    });\n  };\n  const InvestmentDurationChangeHandler = event => {\n    const newValue = event.target.value;\n    setUserInput(prevState => {\n      return {\n        ...prevState,\n        enteredInvestmentDuration: newValue !== \"\" ? parseInt(newValue, 10) : \"\"\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: event => calculateHandler(event, userInput),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"current-savings\",\n          min: \"0\",\n          value: userInput[\"enteredCurrentSavings\"],\n          onChange: CurrentSavingsChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"yearly-contribution\",\n          min: \"0\",\n          value: userInput[\"enteredYearlySavings\"] //two-way binding\n          ,\n          onChange: YearlySavingsChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"expected-return\",\n          min: \"0\",\n          value: userInput[\"enteredExpectedInterest\"],\n          onChange: ExpectedInterestChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"duration\",\n          min: \"0\",\n          value: userInput[\"enteredInvestmentDuration\"],\n          onChange: InvestmentDurationChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        className: \"buttonAlt\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"MUquhtDYPkhrabTUkESDsf+6LTA=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","calculateHandler","event","userInput","preventDefault","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","investedCapital","console","log","resetForm","setUserInput","enteredCurrentSavings","enteredYearlySavings","enteredExpectedInterest","enteredInvestmentDuration","CurrentSavingsChangeHandler","newValue","target","value","prevState","parseInt","YearlySavingsChangeHandler","ExpectedInterestChangeHandler","InvestmentDurationChangeHandler","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","min","onChange","_c","$RefreshReg$"],"sources":["C:/Users/merye/Desktop/react-workshop1-main/src/FormItems/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Form = () => {\r\n  const calculateHandler = (event, userInput) => {\r\n    // Prevent the default form submission behavior\r\n    event.preventDefault();\r\n\r\n    // Should be triggered when form is submitted\r\n\r\n    const yearlyData = []; // per-year results\r\n    let currentSavings = +userInput[\"enteredCurrentSavings\"];\r\n    const yearlyContribution = +userInput[\"enteredYearlySavings\"];\r\n    const expectedReturn = +userInput[\"enteredExpectedInterest\"] / 100;\r\n    const duration = +userInput[\"enteredInvestmentDuration\"];\r\n\r\n    // The below code calculates yearly results (total savings, interest etc)\r\n    for (let i = 0; i < duration; i++) {\r\n      const yearlyInterest = currentSavings * expectedReturn;\r\n      currentSavings += yearlyInterest + yearlyContribution;\r\n      yearlyData.push({\r\n        year: i + 1,\r\n        yearlyInterest: yearlyInterest,\r\n        savingsEndOfYear: currentSavings,\r\n        yearlyContribution: yearlyContribution,\r\n        investedCapital: currentSavings - yearlyInterest,\r\n      });\r\n      console.log(yearlyData);\r\n    }\r\n\r\n    // do something with yearlyData ...\r\n  };\r\n  const resetForm = () => {\r\n    setUserInput({\r\n      enteredCurrentSavings: \"\",\r\n      enteredYearlySavings: \"\",\r\n      enteredExpectedInterest: \"\",\r\n      enteredInvestmentDuration: \"\",\r\n    });\r\n  };\r\n\r\n  const [userInput, setUserInput] = useState({\r\n    enteredCurrentSavings: \"\",\r\n    enteredYearlySavings: \"\",\r\n    enteredExpectedInterest: \"\",\r\n    enteredInvestmentDuration: \"\",\r\n  });\r\n\r\n  const CurrentSavingsChangeHandler = (event) => {\r\n    const newValue = event.target.value;\r\n\r\n    setUserInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        enteredCurrentSavings: newValue !== \"\" ? parseInt(newValue, 10) : \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  const YearlySavingsChangeHandler = (event) => {\r\n    const newValue = event.target.value;\r\n\r\n    setUserInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        enteredYearlySavings: newValue !== \"\" ? parseInt(newValue, 10) : \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  const ExpectedInterestChangeHandler = (event) => {\r\n    const newValue = event.target.value;\r\n\r\n    setUserInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        enteredExpectedInterest: newValue !== \"\" ? parseInt(newValue, 10) : \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  const InvestmentDurationChangeHandler = (event) => {\r\n    const newValue = event.target.value;\r\n\r\n    setUserInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        enteredInvestmentDuration:\r\n          newValue !== \"\" ? parseInt(newValue, 10) : \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"form\"\r\n      onSubmit={(event) => calculateHandler(event, userInput)}\r\n    >\r\n      <div className=\"input-group\">\r\n        <p>\r\n          <label htmlFor=\"current-savings\">Current Savings ($)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"current-savings\"\r\n            min=\"0\"\r\n            value={userInput[\"enteredCurrentSavings\"]}\r\n            onChange={CurrentSavingsChangeHandler}\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"yearly-contribution\"\r\n            min=\"0\"\r\n            value={userInput[\"enteredYearlySavings\"]} //two-way binding\r\n            onChange={YearlySavingsChangeHandler}\r\n          />\r\n        </p>\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <p>\r\n          <label htmlFor=\"expected-return\">\r\n            Expected Interest (%, per year)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"expected-return\"\r\n            min=\"0\"\r\n            value={userInput[\"enteredExpectedInterest\"]}\r\n            onChange={ExpectedInterestChangeHandler}\r\n          />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"duration\">Investment Duration (years)</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"duration\"\r\n            min=\"0\"\r\n            value={userInput[\"enteredInvestmentDuration\"]}\r\n            onChange={InvestmentDurationChangeHandler}\r\n          />\r\n        </p>\r\n      </div>\r\n      <p className=\"actions\">\r\n        <button type=\"reset\" className=\"buttonAlt\">\r\n          Reset\r\n        </button>\r\n        <button type=\"submit\" className=\"button\">\r\n          Calculate\r\n        </button>\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}